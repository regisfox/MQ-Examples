/*******************************************************************************
 * Copyright (C)  2017 - CAIXA Econ√¥mica Federal 
 * 
 * Todos os direitos reservados
 ******************************************************************************/
//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.12.12 at 12:28:01 PM BRST 
//


package br.gov.caixa.simtx.util.xml;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;

import javax.xml.bind.JAXBContext;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.JAXBException;
import javax.xml.bind.Marshaller;
import javax.xml.bind.Unmarshaller;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.stream.XMLStreamReader;
import javax.xml.transform.Source;
import javax.xml.transform.stream.StreamResult;
import javax.xml.transform.stream.StreamSource;

import org.apache.log4j.Logger;
import org.w3c.dom.Node;

import br.gov.caixa.simtx.persistencia.vo.Header;




/**
 * Esta classe foi gerada pelo sistema JaxB, com o nome de ObjectFactory,
 * mas para nao ter varios ObjectFactory espalhados no projeto foi renomeado para HeaderFactory
 * @author rgrosz@brq.com
 * @since 12/dez/2013
 */
@XmlRegistry
public class HeaderFactory {
	
	public static final String HEADER_TAG = "header";
	JAXBContext context;
	Unmarshaller unmarshaller;
	Marshaller marshaller;
	private static Logger logger = Logger.getLogger(HeaderFactory.class);
	
    /**
     * Create an instance of {@link Header }
     * @throws JAXBException 
     * 
     */
	
	public HeaderFactory() throws JAXBException{
		//                                 br.gov.caixa.simtc.pmac.vo
		//context = JAXBContext.newInstance("br.gov.caixa.simtc.pmac.vo");
		context = JAXBContext.newInstance(Header.class);
		//Header.class
		//JAXBContext zContext = JAXBContext.newInstance("br.gov.caixa.simtc.pmac.vo");
		unmarshaller = context.createUnmarshaller();
		marshaller = context.createMarshaller();
	}
	
    public Header createHeader() {
        return new Header();
    }

    public Header createHeader(Source  input){
    	JAXBElement<Header> element;    	
		try {			
			element = (JAXBElement<Header>) unmarshaller.unmarshal(input, Header.class);			
			return element.getValue();
		} catch (JAXBException e) {
			return null;
		}
    }
    
    public Header createHeader(XMLStreamReader  input){
    	JAXBElement<Header> element;    	
		try {
			element = (JAXBElement<Header>) unmarshaller.unmarshal(input, Header.class);
			return element.getValue();
		} catch (JAXBException e) {
			return null;
		}
    }
    
    public Header createHeader(Node  input){
    	JAXBElement<Header> element;    	
		try {			
			element = (JAXBElement<Header>) unmarshaller.unmarshal(input, Header.class);
			JAXBContext.newInstance(Header.class);
			return element.getValue();
		} catch (JAXBException e) {
			return null;
		}
    }
    
    
    public Header createHeader(String  xml){
    	ByteArrayInputStream stream = new ByteArrayInputStream(xml.getBytes()); 
    	return createHeader(new StreamSource(stream));					   
    }
    
    public String serialize(Header h){
    	ByteArrayOutputStream byteOutputStream = new ByteArrayOutputStream();
		StreamResult result = new StreamResult(byteOutputStream);
    	try {
			marshaller.marshal(h, result);
			return byteOutputStream.toString();
		} catch (JAXBException e) {
			logger.warn(e);
			return null;
		}
    }
    
    
}
